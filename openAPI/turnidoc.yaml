openapi: 3.0.3
info:
  title: Swagger Turni REST - OpenAPI 3.0
  description: |-
    Servizio per la gestione degli turni.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of SpeseManager, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
  termsOfService: http://swagger.io/terms/
  contact:
    email: enrico.trx@hotmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/TurniServ/
tags:
  - name: turno
    description: Tutto riguardo i tuoi turni
paths:
  /turno:
  
    get:
      tags:
        - turno
      summary: Ottieni i turni esistenti
      description: Ottieni gli turni esistenti
      operationId: elencoTurni
      responses:
        '200':
          description: Operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turno'    
            application/xml:
              schema:
                $ref: '#/components/schemas/Turno'
        '404':
          description: Turno non trovati
        '500':
          description: Internal Server Error
          
    post:
      tags:
        - turno
      summary: Aggiungi un nuovo turno
      description: Aggiungi un nuovo turno
      operationId: creaTurno
      requestBody:
        description: Crea un nuovo turno
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Turno'    
          application/xml:
              schema:
                $ref: '#/components/schemas/Turno'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Turno'
        required: true
      responses:
        '200':
          description: Operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turno'  
            application/xml:
              schema:
                $ref: '#/components/schemas/Turno'
        '405':
          description: Input non valido
  
  /turno/{id}:
    get:
      tags:
        - turno
      summary: Trova turno dall'ID del profilo (hashed)
      description: Ritorna un singolo turno
      operationId: getTurno
      parameters:
        - name: id
          in: path
          description: ID del profilo legato al turno
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turno'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Turno'
        '400':
          description: ID fornito non valido
        '404':
          description: Turno non trovato
    put:
      tags:
        - turno
      summary: Update di un turno esistente
      description: Update di un turno esistente dato l'Id
      operationId: aggiornaTurno
      requestBody:
        description: Update di un turno esistente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Turno'
          application/xml:
            schema:
              $ref: '#/components/schemas/Turno'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Turno'
        required: true
      responses:
        '200':
          description: Operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turno'        
            application/xml:
              schema:
                $ref: '#/components/schemas/Turno'
        '400':
          description: ID fornito non valido
        '404':
          description: Turno non trovato
        '405':
          description: Errore di validazione
            
    delete:
      tags:
        - turno
      summary: Cancella un turno
      description: cancella un turno dato l'id
      operationId: cancellaTurno
      parameters:
        - name: api_key
          in: header
          description: cancella un turno 
          required: false
          schema:
            type: int
        - name: id
          in: path
          description: ID del turno da eliminare
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operazione riuscita!
          
        '400':
          description: ID fornito non valido
        '404':
          description: Turno non trovato!
        
  /turno/hours:
    get:
      tags:
        - turno
      summary: restituisce le ore lavorative di un fattorino
      description: restituisce le ore lavorative di un fattorino
      operationId: getHours
      parameters:
        - name: api_key
          in: header
          description: cancella un turno 
          required: false
          schema:
            type: int
        - in: path
          name: id
          description: ID del fattorino
          required: true
          schema: 
            type: int
            format: Int64
      response:
        
  
components:
  schemas:

    Utente:
      required:
        - email
      type: object
      properties:
        id_utente:
          type: integer
          format: int64
          example: 10
        email:
          type: string
          example: 'nome.cognome@mail.com'
         
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Utente:
      description: oggetto Utente da aggiungere al registro
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Utente'
        application/xml:
          schema:
            $ref: '#/components/schemas/Utente'